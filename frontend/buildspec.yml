version: 0.2
env:
  privilegedMode: true
  variables:
    AWS_REGION: "ap-southeast-2"
    CLUSTER_NAME: "VPC2-Cluster-Lab17"
    CI_PROJECT_FE_NAME: "frontend-image-lab17"
    TASK_NAME_FE: "VPC2-Task-Frontend-Lab17-withDBinfo-06:2"
phases:
  pre_build:
    commands:
      # Debugging: Print current user and group memberships
      - echo "Current user: $(whoami)"
      - echo "Groups: $(groups)"

      # Try starting Docker Daemon more robustly
      # Ensure the Docker group exists and user is in it (CodeBuild typically handles this for privilegedMode)
      - if ! getent group docker > /dev/null; then sudo groupadd docker; fi
      - sudo usermod -aG docker $(whoami)
      - newgrp docker # Apply new group membership to current shell (important!)

      # Explicitly remove old Docker socket if it exists (cleanup)
      - sudo rm -f /var/run/docker.sock

      # Start the Docker daemon in the background with logging to a file
      # Use a longer timeout for dockerd to start
      - echo "Starting Docker daemon..."
      - nohup dockerd > /tmp/dockerd.log 2>&1 &

      # Wait for Docker daemon to be fully ready (increased timeout and more verbose check)
      - timeout 60 sh -c 'until docker info &>/dev/null; do echo "Waiting for Docker daemon..."; sleep 2; done'
      - echo "Docker daemon started successfully!"

      # Debugging: Check Docker status after startup
      - docker info
      - docker ps -a

      # Login to Amazon ECR
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_
